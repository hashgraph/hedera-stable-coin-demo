/*
 * This file is generated by jOOQ.
 */
package com.hedera.hashgraph.stablecoin.platform.db.tables;


import com.hedera.hashgraph.stablecoin.platform.db.Public;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndexesRelationSize extends TableImpl<Record> {

    private static final long serialVersionUID = 269684850;

    /**
     * The reference instance of <code>public.indexes_relation_size</code>
     */
    public static final IndexesRelationSize INDEXES_RELATION_SIZE = new IndexesRelationSize();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>public.indexes_relation_size.index_name</code>.
     */
    public final TableField<Record, String> INDEX_NAME = createField(DSL.name("index_name"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.indexes_relation_size.total_bytes</code>.
     */
    public final TableField<Record, Long> TOTAL_BYTES = createField(DSL.name("total_bytes"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.indexes_relation_size</code> table reference
     */
    public IndexesRelationSize() {
        this(DSL.name("indexes_relation_size"), null);
    }

    /**
     * Create an aliased <code>public.indexes_relation_size</code> table reference
     */
    public IndexesRelationSize(String alias) {
        this(DSL.name(alias), INDEXES_RELATION_SIZE);
    }

    /**
     * Create an aliased <code>public.indexes_relation_size</code> table reference
     */
    public IndexesRelationSize(Name alias) {
        this(alias, INDEXES_RELATION_SIZE);
    }

    private IndexesRelationSize(Name alias, Table<Record> aliased) {
        this(alias, aliased, new Field[1]);
    }

    private IndexesRelationSize(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
    }

    public <O extends Record> IndexesRelationSize(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, INDEXES_RELATION_SIZE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public IndexesRelationSize as(String alias) {
        return new IndexesRelationSize(DSL.name(alias), this, parameters);
    }

    @Override
    public IndexesRelationSize as(Name alias) {
        return new IndexesRelationSize(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public IndexesRelationSize rename(String name) {
        return new IndexesRelationSize(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public IndexesRelationSize rename(Name name) {
        return new IndexesRelationSize(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public IndexesRelationSize call(Object mainTable) {
        return new IndexesRelationSize(DSL.name(getName()), null, new Field[] { 
              DSL.val(mainTable, org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"regclass\""))
        });
    }

    /**
     * Call this table-valued function
     */
    public IndexesRelationSize call(Field<Object> mainTable) {
        return new IndexesRelationSize(DSL.name(getName()), null, new Field[] { 
              mainTable
        });
    }
}
