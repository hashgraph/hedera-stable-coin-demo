/*
 * This file is generated by jOOQ.
 */
package com.hedera.hashgraph.stablecoin.platform.db.routines;


import com.hedera.hashgraph.stablecoin.platform.db.Public;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DetachTablespace extends AbstractRoutine<Integer> {

    private static final long serialVersionUID = 1951889615;

    /**
     * The parameter <code>public.detach_tablespace.RETURN_VALUE</code>.
     */
    public static final Parameter<Integer> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.detach_tablespace.tablespace</code>.
     */
    public static final Parameter<String> TABLESPACE = Internal.createParameter("tablespace", org.jooq.impl.SQLDataType.VARCHAR, false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> HYPERTABLE = Internal.createParameter("hypertable", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"regclass\"").defaultValue(org.jooq.impl.DSL.field("NULL::regclass", org.jooq.impl.SQLDataType.OTHER)), true, false);

    /**
     * The parameter <code>public.detach_tablespace.if_attached</code>.
     */
    public static final Parameter<Boolean> IF_ATTACHED = Internal.createParameter("if_attached", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), true, false);

    /**
     * Create a new routine call instance
     */
    public DetachTablespace() {
        super("detach_tablespace", Public.PUBLIC, org.jooq.impl.SQLDataType.INTEGER);

        setReturnParameter(RETURN_VALUE);
        addInParameter(TABLESPACE);
        addInParameter(HYPERTABLE);
        addInParameter(IF_ATTACHED);
    }

    /**
     * Set the <code>tablespace</code> parameter IN value to the routine
     */
    public void setTablespace(String value) {
        setValue(TABLESPACE, value);
    }

    /**
     * Set the <code>tablespace</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setTablespace(Field<String> field) {
        setField(TABLESPACE, field);
    }

    /**
     * Set the <code>hypertable</code> parameter IN value to the routine
     */
    public void setHypertable(Object value) {
        setValue(HYPERTABLE, value);
    }

    /**
     * Set the <code>hypertable</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setHypertable(Field<Object> field) {
        setField(HYPERTABLE, field);
    }

    /**
     * Set the <code>if_attached</code> parameter IN value to the routine
     */
    public void setIfAttached(Boolean value) {
        setValue(IF_ATTACHED, value);
    }

    /**
     * Set the <code>if_attached</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setIfAttached(Field<Boolean> field) {
        setField(IF_ATTACHED, field);
    }
}
