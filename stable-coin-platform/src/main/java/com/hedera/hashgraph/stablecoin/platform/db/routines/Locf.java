/*
 * This file is generated by jOOQ.
 */
package com.hedera.hashgraph.stablecoin.platform.db.routines;


import com.hedera.hashgraph.stablecoin.platform.db.Public;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;



/**
 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
 */
@java.lang.Deprecated
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Locf extends AbstractRoutine<Object> {

    private static final long serialVersionUID = 1830374551;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"anyelement\""), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> VALUE = Internal.createParameter("value", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"anyelement\""), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> PREV = Internal.createParameter("prev", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"anyelement\"").defaultValue(org.jooq.impl.DSL.field("NULL::unknown", org.jooq.impl.SQLDataType.OTHER)), true, false);

    /**
     * The parameter <code>public.locf.treat_null_as_missing</code>.
     */
    public static final Parameter<Boolean> TREAT_NULL_AS_MISSING = Internal.createParameter("treat_null_as_missing", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), true, false);

    /**
     * Create a new routine call instance
     */
    public Locf() {
        super("locf", Public.PUBLIC, org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"anyelement\""));

        setReturnParameter(RETURN_VALUE);
        addInParameter(VALUE);
        addInParameter(PREV);
        addInParameter(TREAT_NULL_AS_MISSING);
    }

    /**
     * Set the <code>value</code> parameter IN value to the routine
     */
    public void setValue(Object value) {
        setValue(VALUE, value);
    }

    /**
     * Set the <code>value</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setValue(Field<Object> field) {
        setField(VALUE, field);
    }

    /**
     * Set the <code>prev</code> parameter IN value to the routine
     */
    public void setPrev(Object value) {
        setValue(PREV, value);
    }

    /**
     * Set the <code>prev</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPrev(Field<Object> field) {
        setField(PREV, field);
    }

    /**
     * Set the <code>treat_null_as_missing</code> parameter IN value to the routine
     */
    public void setTreatNullAsMissing(Boolean value) {
        setValue(TREAT_NULL_AS_MISSING, value);
    }

    /**
     * Set the <code>treat_null_as_missing</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setTreatNullAsMissing(Field<Boolean> field) {
        setField(TREAT_NULL_AS_MISSING, field);
    }
}
