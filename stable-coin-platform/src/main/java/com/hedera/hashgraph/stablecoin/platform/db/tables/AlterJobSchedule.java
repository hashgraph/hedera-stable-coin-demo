/*
 * This file is generated by jOOQ.
 */
package com.hedera.hashgraph.stablecoin.platform.db.tables;


import com.hedera.hashgraph.stablecoin.platform.db.Public;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.YearToSecond;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlterJobSchedule extends TableImpl<Record> {

    private static final long serialVersionUID = 338908445;

    /**
     * The reference instance of <code>public.alter_job_schedule</code>
     */
    public static final AlterJobSchedule ALTER_JOB_SCHEDULE = new AlterJobSchedule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>public.alter_job_schedule.job_id</code>.
     */
    public final TableField<Record, Integer> JOB_ID = createField(DSL.name("job_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.alter_job_schedule.schedule_interval</code>.
     */
    public final TableField<Record, YearToSecond> SCHEDULE_INTERVAL = createField(DSL.name("schedule_interval"), org.jooq.impl.SQLDataType.INTERVAL, this, "");

    /**
     * The column <code>public.alter_job_schedule.max_runtime</code>.
     */
    public final TableField<Record, YearToSecond> MAX_RUNTIME = createField(DSL.name("max_runtime"), org.jooq.impl.SQLDataType.INTERVAL, this, "");

    /**
     * The column <code>public.alter_job_schedule.max_retries</code>.
     */
    public final TableField<Record, Integer> MAX_RETRIES = createField(DSL.name("max_retries"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.alter_job_schedule.retry_period</code>.
     */
    public final TableField<Record, YearToSecond> RETRY_PERIOD = createField(DSL.name("retry_period"), org.jooq.impl.SQLDataType.INTERVAL, this, "");

    /**
     * The column <code>public.alter_job_schedule.next_start</code>.
     */
    public final TableField<Record, OffsetDateTime> NEXT_START = createField(DSL.name("next_start"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * Create a <code>public.alter_job_schedule</code> table reference
     */
    public AlterJobSchedule() {
        this(DSL.name("alter_job_schedule"), null);
    }

    /**
     * Create an aliased <code>public.alter_job_schedule</code> table reference
     */
    public AlterJobSchedule(String alias) {
        this(DSL.name(alias), ALTER_JOB_SCHEDULE);
    }

    /**
     * Create an aliased <code>public.alter_job_schedule</code> table reference
     */
    public AlterJobSchedule(Name alias) {
        this(alias, ALTER_JOB_SCHEDULE);
    }

    private AlterJobSchedule(Name alias, Table<Record> aliased) {
        this(alias, aliased, new Field[7]);
    }

    private AlterJobSchedule(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
    }

    public <O extends Record> AlterJobSchedule(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, ALTER_JOB_SCHEDULE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public AlterJobSchedule as(String alias) {
        return new AlterJobSchedule(DSL.name(alias), this, parameters);
    }

    @Override
    public AlterJobSchedule as(Name alias) {
        return new AlterJobSchedule(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public AlterJobSchedule rename(String name) {
        return new AlterJobSchedule(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public AlterJobSchedule rename(Name name) {
        return new AlterJobSchedule(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public AlterJobSchedule call(Integer jobId, YearToSecond scheduleInterval, YearToSecond maxRuntime, Integer maxRetries, YearToSecond retryPeriod, Boolean ifExists, OffsetDateTime nextStart) {
        return new AlterJobSchedule(DSL.name(getName()), null, new Field[] { 
              DSL.val(jobId, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(scheduleInterval, org.jooq.impl.SQLDataType.INTERVAL.defaultValue(org.jooq.impl.DSL.field("NULL::interval", org.jooq.impl.SQLDataType.INTERVAL)))
            , DSL.val(maxRuntime, org.jooq.impl.SQLDataType.INTERVAL.defaultValue(org.jooq.impl.DSL.field("NULL::interval", org.jooq.impl.SQLDataType.INTERVAL)))
            , DSL.val(maxRetries, org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL::integer", org.jooq.impl.SQLDataType.INTEGER)))
            , DSL.val(retryPeriod, org.jooq.impl.SQLDataType.INTERVAL.defaultValue(org.jooq.impl.DSL.field("NULL::interval", org.jooq.impl.SQLDataType.INTERVAL)))
            , DSL.val(ifExists, org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)))
            , DSL.val(nextStart, org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.defaultValue(org.jooq.impl.DSL.field("NULL::timestamp with time zone", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)))
        });
    }

    /**
     * Call this table-valued function
     */
    public AlterJobSchedule call(Field<Integer> jobId, Field<YearToSecond> scheduleInterval, Field<YearToSecond> maxRuntime, Field<Integer> maxRetries, Field<YearToSecond> retryPeriod, Field<Boolean> ifExists, Field<OffsetDateTime> nextStart) {
        return new AlterJobSchedule(DSL.name(getName()), null, new Field[] { 
              jobId
            , scheduleInterval
            , maxRuntime
            , maxRetries
            , retryPeriod
            , ifExists
            , nextStart
        });
    }
}
